#!/bin/sh

# script to help meshnodes make an autoupdate
# a node which looses connection (because a uplink mesh node is talking newer 
# batman v15) try to log in as client in a network with well known essid
# and forces a autoupdate (if it is turned on in general)
#
# this script do not do any harm if running for years
# more Info: https://github.com/viisauksena/gluon-v14tov15-helper

# some cron debug help , write in ram 
echo "v14v15 helper successfully start at $(date +%y%m%d_%H%M)" > /tmp/v14_lastrun

# if your script is dependend on autoupdater, do only uptate if its realy enabled!
if [ $(uci get autoupdater.settings.enabled) = 0 ]; then exit 1; fi

# check gw
# quick and dirty do it 4 times every 30 seconds
# to highly prevent false positives
gwl=$(batctl gwl -H -n |grep gateways | wc -l) ; if [ $gwl != 0 ]; then exit 11; fi ; sleep 30
gwl=$(batctl gwl -H -n |grep gateways | wc -l) ; if [ $gwl != 0 ]; then exit 12; fi ; sleep 30 
gwl=$(batctl gwl -H -n |grep gateways | wc -l) ; if [ $gwl != 0 ]; then exit 13; fi ; sleep 30 
gwl=$(batctl gwl -H -n |grep gateways | wc -l) ; if [ $gwl != 0 ]; then exit 14; fi

# if wlan0 is desired 
# (only in configmode where we do not want autoupdater, but its possible to run from there too)
# ifconfig wlan0 up
# iw wlan0 connect freiburg.freifunk.net
# udhcp -b -i wlan0 

# check if freifunk as we know it is nearby
ffssid=$(uci get wireless.client_radio0.ssid)
: ${ffssid:=freiburg.freifunk.net} # if for whatever reason frssid is NULL
many=$(iwinfo phy0 scan |grep $ffssid | wc -l)

# connect to freifunk and get dhcp lease
if [ $many != 0 ]; then
	# generate foo mac, and alternative if failing
        foomac=42:42:$(iwinfo | grep Acc |head -n1 |grep -oE '[^ ]+$' |cut -d":" -f 3-6)
	: ${foomac:=42:42:23:$(date +%H:%M:%S)}
	# make hw if ready
	iw phy0 interface add update type managed
        ifconfig update hw ether $foomac
        ifconfig update up
	# install new if in /etc/config/wireless
	uci set wireless.update_radio0=wifi-iface
	uci set wireless.update_radio0.ifname=update
	uci set wireless.update_radio0.network=update
	uci set wireless.update_radio0.disabled=0
	uci set wireless.update_radio0.device=radio0
	uci set wireless.update_radio0.mode=sta
	uci set wireless.update_radio0.macaddr=$foomac
	uci set wireless.update_radio0.ssid=$ffssid
	uci comit
	# restart wifi and get ip 
	wifi; sleep 2;
	udhcpc -B -b -i update
fi

# just in case v6 dns resolving is strange
# TODO : check everything
# something is wrong here .. if IFace is generated and all autoupdater /wget will throw v6 permission denied
# echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
# echo 1 > /proc/sys/net/ipv6/conf/all/autoconf

# just in case dns doesnt work , believed not needed
# echo "nameserver 10.60.0.100" >> /etc/resolv.conf
# echo "nameserver 4.2.2.2" >> /etc/resolv.conf

# here comes the funny part, regular
# also means update server MUST be reachable as client
autoupdater -f

# alternativly load and verify a bat v15 version in ram and change existing batman on node
# pro: no need of autoupdater
# contra: node has to be online(uptime) since update to v15 in network is timed
# https://forum.freifunk.net/t/batman-v14-zu-v15-upgrade-gluon-package/10808/6?u=fuzzle

# if autoupdater and first checks above run correct you should never reach this point
# better safe than sorry - taking new IF down and remove wireless entrys
# could be while download and/or manifest-signing or checksum check fails
iw update del
uci delete wireless.update_radio0
uci commit
logger "something strange happens - could not autoupdate via v14v15 helper"
exit 21

